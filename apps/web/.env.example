# =============================================================================
# Mintenance Web App - Environment Configuration
# =============================================================================
# Copy this file to .env.local for local development
# For production, configure these in your hosting platform (Vercel, AWS, etc.)
# NEVER commit .env.local to version control - only commit .env.example
# =============================================================================

# -----------------------------------------------------------------------------
# CRITICAL - Required for App to Function
# -----------------------------------------------------------------------------

# Node Environment
# Options: development, production, test
NODE_ENV=development

# JWT Secret for Authentication
# SECURITY: Must be at least 32 characters (64+ for production)
# Generate with: openssl rand -base64 64
# NEVER commit real secret to version control
JWT_SECRET=generate-strong-32-char-secret-key-here

# Supabase Configuration
# Get these from your Supabase project dashboard: https://app.supabase.com
# For local development: http://127.0.0.1:54321 (requires local Supabase setup)
# For production: https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key

# Supabase Service Role Key (SERVER-SIDE ONLY - NEVER expose to client)
# Get from: Supabase Dashboard > Settings > API > service_role key
# Used for admin operations and bypassing Row Level Security
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# -----------------------------------------------------------------------------
# Payment Processing (Stripe) - REQUIRED
# -----------------------------------------------------------------------------

# Stripe Secret Key (SERVER-SIDE ONLY)
# Get from: Stripe Dashboard > Developers > API keys
# Format: sk_test_* for test mode, sk_live_* for production
STRIPE_SECRET_KEY=sk_test_your_stripe_key

# Stripe Publishable Key (CLIENT-SAFE)
# Format: pk_test_* for test mode, pk_live_* for production
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key

# Stripe Webhook Secret
# Get from: Stripe Dashboard > Developers > Webhooks > Add endpoint
# Used to verify webhook signatures
# Format: whsec_*
# For local testing: stripe listen --forward-to localhost:3000/api/webhooks/stripe
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# -----------------------------------------------------------------------------
# Redis Configuration (Rate Limiting & Caching) - RECOMMENDED
# -----------------------------------------------------------------------------

# Upstash Redis REST URL
# Get from: https://console.upstash.com/
# Leave empty to use in-memory fallback (NOT recommended for production)
UPSTASH_REDIS_REST_URL=https://your-redis-url.upstash.io

# Upstash Redis REST Token
UPSTASH_REDIS_REST_TOKEN=your-redis-token-here

# -----------------------------------------------------------------------------
# Optional Services
# -----------------------------------------------------------------------------

# Sentry DSN for Error Tracking
# Get from: https://sentry.io/settings/projects/
# Leave empty to disable error reporting
SENTRY_DSN=

# Application Public URL
# Used for redirects, email links, OAuth callbacks
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Google Maps API Key (CLIENT-SAFE, but should be restricted)
# Get from: https://console.cloud.google.com/google/maps-apis
# IMPORTANT: Restrict to your domain in Google Cloud Console
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=

# -----------------------------------------------------------------------------
# Database Configuration (Optional - Supabase is primary)
# -----------------------------------------------------------------------------

# PostgreSQL Connection String (if using direct DB connection)
# Format: postgresql://user:password@host:port/database
# Usually not needed if using Supabase client
DATABASE_URL=

# -----------------------------------------------------------------------------
# Email Service (Optional - for transactional emails)
# -----------------------------------------------------------------------------

# SendGrid API Key
# Get from: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=

# Email From Address
EMAIL_FROM=noreply@mintenance.com
EMAIL_FROM_NAME=Mintenance

# -----------------------------------------------------------------------------
# AI Services (Optional - for AI features)
# -----------------------------------------------------------------------------

# OpenAI API Key
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=

# Anthropic API Key (Claude)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=

# -----------------------------------------------------------------------------
# Monitoring & Analytics (Optional)
# -----------------------------------------------------------------------------

# Google Analytics Measurement ID
# Format: G-XXXXXXXXXX
NEXT_PUBLIC_GA_MEASUREMENT_ID=

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------

# Enable bundle analysis (set to 'true' to analyze bundle size)
ANALYZE=false

# =============================================================================
# Configuration Notes
# =============================================================================
#
# 1. SECURITY BEST PRACTICES:
#    - Never commit .env.local or .env.production to version control
#    - Use different keys for development, staging, and production
#    - Rotate secrets regularly, especially JWT_SECRET
#    - Store production secrets in secure vaults (Vercel, AWS Secrets Manager)
#
# 2. ENVIRONMENT FILES PRIORITY (Next.js):
#    .env.local          # Loaded in all environments, gitignored
#    .env.development    # Loaded in development only
#    .env.production     # Loaded in production only
#    .env.test          # Loaded when running tests
#    .env               # Loaded in all environments (safe defaults only)
#
# 3. CLIENT VS SERVER VARIABLES:
#    CLIENT-SIDE (exposed to browser): Prefix with NEXT_PUBLIC_*
#    SERVER-SIDE (never exposed): No NEXT_PUBLIC_ prefix
#
# 4. VALIDATION:
#    Environment variables are validated at build time using Zod schema
#    See: apps/web/lib/env.ts
#    Missing or invalid variables will cause build to fail
#
# 5. QUICK START:
#    1. cp .env.example .env.local
#    2. Fill in CRITICAL variables (JWT_SECRET, Supabase, Stripe)
#    3. npm run dev
#
# 6. GETTING CREDENTIALS:
#    Supabase:  https://app.supabase.com > Project > Settings > API
#    Stripe:    https://dashboard.stripe.com > Developers > API keys
#    Redis:     https://console.upstash.com > Create Database
#    Sentry:    https://sentry.io > Create Project > Copy DSN
#
# 7. LOCAL TESTING:
#    Stripe webhooks: stripe listen --forward-to localhost:3000/api/webhooks/stripe
#    Local Supabase: npx supabase start
#
# =============================================================================
