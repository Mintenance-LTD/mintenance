# =============================================================================
# Mintenance Mobile App - Environment Configuration Example
# =============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control - only commit .env.example
# =============================================================================

# -----------------------------------------------------------------------------
# CRITICAL - Required for App to Function
# -----------------------------------------------------------------------------

# Supabase Configuration
# Get these from your Supabase project dashboard: https://app.supabase.com
EXPO_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
EXPO_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here

# API Configuration
# Base URL for your backend API
EXPO_PUBLIC_API_BASE_URL=https://your-api.com/api
EXPO_PUBLIC_API_TIMEOUT=30000

# -----------------------------------------------------------------------------
# Environment & Build Info
# -----------------------------------------------------------------------------

# Environment: development, staging, or production
EXPO_PUBLIC_ENVIRONMENT=development

# App version information
EXPO_PUBLIC_APP_VERSION=1.2.3
EXPO_PUBLIC_BUILD_NUMBER=15

# Network timeout in milliseconds
EXPO_PUBLIC_NETWORK_TIMEOUT=30000

# -----------------------------------------------------------------------------
# Payment Processing (Stripe)
# -----------------------------------------------------------------------------

# Stripe Publishable Key (client-safe)
# Get from: https://dashboard.stripe.com/apikeys
# Use test key (pk_test_) for development, live key (pk_live_) for production
EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key

# -----------------------------------------------------------------------------
# External Services (Optional but Recommended)
# -----------------------------------------------------------------------------

# Google Maps API Key
# Get from: https://console.cloud.google.com/google/maps-apis
# IMPORTANT: Restrict this key to your Android/iOS app bundle IDs
# See: https://developers.google.com/maps/documentation/android-sdk/get-api-key
GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# Google Services Configuration Files
# Set to 1 if you have these files, leave empty if not
GOOGLE_SERVICES_JSON=
GOOGLE_SERVICES_PLIST=

# Sentry DSN for Error Tracking
# Get from: https://sentry.io/settings/projects/
# Leave empty to disable error reporting
EXPO_PUBLIC_SENTRY_DSN=https://your-sentry-dsn@sentry.io/your-project-id

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------

# Enable biometric authentication (Face ID, Touch ID, Fingerprint)
EXPO_PUBLIC_ENABLE_BIOMETRIC_AUTH=true

# Enable push notifications
EXPO_PUBLIC_ENABLE_PUSH_NOTIFICATIONS=true

# Enable analytics tracking
EXPO_PUBLIC_ENABLE_ANALYTICS=true

# Enable crash reporting (Sentry integration)
EXPO_PUBLIC_ENABLE_CRASH_REPORTING=true

# Enable performance monitoring
EXPO_PUBLIC_ENABLE_PERFORMANCE_MONITORING=true

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------

# Log level: debug, info, warn, error
# Use 'debug' for development, 'info' or 'warn' for production
EXPO_PUBLIC_LOG_LEVEL=debug

# Enable console logs
# Set to false in production to reduce bundle size and improve performance
EXPO_PUBLIC_ENABLE_CONSOLE_LOGS=true

# -----------------------------------------------------------------------------
# Development Only
# -----------------------------------------------------------------------------

# EAS Project ID (automatically filled by Expo)
# EAS_PROJECT_ID=671d1323-6979-465f-91db-e61471746ab3

# =============================================================================
# Configuration Notes
# =============================================================================
#
# 1. SECURITY BEST PRACTICES:
#    - Never commit .env files to version control
#    - Use different keys for development, staging, and production
#    - Rotate keys regularly, especially if exposed
#    - Use restricted API keys with domain/bundle ID restrictions
#    - Store production keys in secure credential management (e.g., 1Password, AWS Secrets Manager)
#
# 2. SUPABASE SETUP:
#    - Project URL format: https://<project-id>.supabase.co
#    - Anon key is safe for client-side use (public)
#    - Never expose service_role key in mobile app
#    - Enable Row Level Security (RLS) on all tables
#
# 3. STRIPE SETUP:
#    - Use test keys during development (pk_test_*, sk_test_*)
#    - Test mode data is automatically cleared regularly
#    - Switch to live keys only in production
#    - Configure webhook endpoints in Stripe dashboard
#
# 4. GOOGLE MAPS:
#    - Restrict API key to your iOS/Android bundle IDs
#    - Consider using Places API, Maps SDK for Android/iOS
#    - Monitor usage in Google Cloud Console
#    - Enable billing alerts to avoid unexpected charges
#
# 5. FEATURE FLAGS:
#    - Disable unused features to reduce bundle size
#    - Test features in development before enabling in production
#    - Use remote config (e.g., Firebase Remote Config) for dynamic flags
#
# 6. ENVIRONMENT-SPECIFIC CONFIGS:
#    Development (.env.development):
#    - Use test API keys
#    - Enable all logging and debugging
#    - Connect to staging/dev databases
#
#    Production (.env.production):
#    - Use live API keys
#    - Disable debug logging
#    - Enable crash reporting and analytics
#    - Set log level to 'info' or 'warn'
#
# 7. BUILDING THE APP:
#    - For EAS Build: Configure in eas.json
#    - For local builds: Use .env files
#    - Validate all required vars before building
#    - Test configuration in staging first
#
# 8. TROUBLESHOOTING:
#    - Check app.config.js validation errors
#    - Verify environment variable prefixes (EXPO_PUBLIC_ for client-side)
#    - Clear Metro bundler cache: npx expo start -c
#    - Rebuild after changing .env: npx expo prebuild --clean
#
# =============================================================================
# Quick Start
# =============================================================================
#
# 1. Copy this file:
#    cp .env.example .env
#
# 2. Fill in your Supabase credentials (REQUIRED):
#    - EXPO_PUBLIC_SUPABASE_URL
#    - EXPO_PUBLIC_SUPABASE_ANON_KEY
#
# 3. Fill in other required services based on features you're using
#
# 4. Start development server:
#    npm run start
#
# 5. Build for production:
#    eas build --platform all
#
# =============================================================================
# Getting Credentials
# =============================================================================
#
# Supabase:
#   1. Go to https://app.supabase.com
#   2. Select your project
#   3. Go to Settings > API
#   4. Copy URL and anon/public key
#
# Stripe:
#   1. Go to https://dashboard.stripe.com
#   2. Developers > API keys
#   3. Copy publishable key (starts with pk_test_ or pk_live_)
#
# Google Maps:
#   1. Go to https://console.cloud.google.com
#   2. Enable Maps SDK for iOS and Android
#   3. Create API key with iOS/Android app restrictions
#
# Sentry:
#   1. Go to https://sentry.io
#   2. Create new project (React Native)
#   3. Copy DSN from project settings
#
# =============================================================================
# Validation
# =============================================================================
# The app validates environment variables at startup using:
# - apps/mobile/src/config/environment.ts
# - apps/mobile/src/utils/EnvironmentSecurity.ts
#
# Run validation manually:
#   npx ts-node -e "require('./src/config/environment').validateConfig()"
#
# Generate security report:
#   npx ts-node -e "console.log(require('./src/config/environment').getSecurityReport())"
#
# =============================================================================
